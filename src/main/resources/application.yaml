server:
  port: ${SPRING_ALERT_SERVER_PORT}
spring:
  application:
    name: alert-service
  config:
    import:
    - optional:file:.env[.properties]
  profiles:
    active:
    - ${SPRING_PROFILES_ACTIVE}
  mail:
    host: ${SPRING_MAIL_HOST} # 1
    # host: smtp.gmail.com # 1
    port: ${SPRING_MAIL_PORT} # 2
    # port: 587 # 2
    username: ${SPRING_MAIL_USERNAME} # 3
    password: ${SPRING_MAIL_PASSWORD} # 4
    properties:
      mail:
        smtp:
          auth: true # 5
          timeout: 5000 # 6
          starttls:
            enable: true # 7
  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
  # -------------------------------------------------------------------
  #  Kafka 설정
  # -------------------------------------------------------------------  
  
  kafka:
    bootstrap-servers: ${SPRING_KAFKA}
    consumer:
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
# -------------------------------------------------------------------
# Logging 설정
# -------------------------------------------------------------------  
logging:
  level:
    "[org.springframework.web.servlet.DispatcherServlet]": debug  # 요청 매핑 로그
    "[com.inkcloud.alert_service]": debug                        # 애플리케이션 로그
    "[org.springframework.web.filter.CommonsRequestLoggingFilter]": debug  # 요청 로그
# -------------------------------------------------------------------
# Eureka-Server 설정
# -------------------------------------------------------------------  
eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.cloud.client.hostname}:${server.port}
    prefer-ip-address: true       # Eureka 클라이언트가 자신을 등록할 때, 호스트 이름 대신 IP 주소를 사용하여 서비스 레지스리에 등록한다. 
  client:  
    register-with-eureka: true    # Eureka Server에 자가 등록
    fetch-registry: true          # Eureka Server에서 서비스 리포지토리 목록 조회
    service-url:
      # defaultZone: http://${SPRING_EUREKA_LOCAL_TEMP}:8761/eureka
      defaultZone: ${SPRING_EUREKA_SERVER}